{"version":3,"sources":["Header.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["Header","src","alt","TodoItem","props","className","type","checked","item","completed","onChange","handleCheck","id","style","fontStyle","color","textDecoration","text","onClick","handleDelete","TodoList","state","newTodo","todos","addTodo","bind","handleChange","deleteCompleted","this","setState","prevState","map","todo","event","target","name","value","updatedTodoList","push","length","todoList","forEach","incompleteTodoList","todoItems","key","remainingTodos","placeholder","some","opacity","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2KAceA,MAZf,WACI,OACI,gCACI,yBACIC,IAAI,gIACJC,IAAI,KAER,2C,0CCYGC,MAnBf,SAAkBC,GAQd,OAEQ,2BAAOC,UAAU,aACb,2BAAOC,KAAK,WAAWC,QAASH,EAAMI,KAAKC,UAAWC,SAAU,kBAAMN,EAAMO,YAAYP,EAAMI,KAAKI,OACnG,uBAAGC,MAAOT,EAAMI,KAAKC,UAVV,CACnBK,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAO0C,MAAOZ,EAAMI,KAAKS,MACpE,4BAAQC,QAAS,kBAAMd,EAAMe,aAAaf,EAAMI,KAAKI,MAArD,YCmGDQ,E,kDA9GX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,QAAS,GACTC,MAAO,IAEX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKd,YAAc,EAAKA,YAAYc,KAAjB,gBACnB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKN,aAAe,EAAKA,aAAaM,KAAlB,gBAVV,E,wDAaFb,GACRgB,KAAKC,UAAS,SAAAC,GAOV,MAAO,CACHP,MAPiBO,EAAUP,MAAMQ,KAAI,SAAAC,GAIrC,OAHIA,EAAKpB,KAAOA,IACZoB,EAAKvB,WAAauB,EAAKvB,WAEpBuB,W,mCAQNC,GAAQ,IAAD,EACMA,EAAMC,OAArBC,EADS,EACTA,KAAMC,EADG,EACHA,MACbR,KAAKC,SAAL,eAAiBM,EAAOC,M,gCAIE,KAAvBR,KAAKP,MAAMC,SACdM,KAAKC,UAAS,SAAAC,GACV,IAAMO,EAAkBP,EAAUP,MAElC,OADAc,EAAgBC,KAAK,CAAC1B,GAAKkB,EAAUP,MAAMgB,OAAS,EAAItB,KAAMa,EAAUR,QAASb,WAAW,IACrF,CACHa,QAAS,GACTC,MAAOc,Q,mCAKNzB,GACTgB,KAAKC,UAAS,SAAAC,GACV,IAAIU,EAAW,GAMf,OALAV,EAAUP,MAAMkB,SAAQ,SAAAjC,GACjBA,EAAKI,KAAOA,GACX4B,EAASF,KAAK9B,MAGhB,CACFe,MAAOiB,Q,wCAMfZ,KAAKC,UAAS,SAAAC,GACV,IAAIY,EAAqB,GAMzB,OALAZ,EAAUP,MAAMkB,SAAQ,SAAAjC,IACE,IAAnBA,EAAKC,WACJiC,EAAmBJ,KAAK9B,MAGzB,CACHe,MAAOmB,Q,+BAKT,IAAD,OAECC,EAAYf,KAAKP,MAAME,MAAMQ,KAAI,SAAAvB,GAAI,OAAI,kBAAC,EAAD,CAAUoC,IAAKpC,EAAKI,GAAIJ,KAAMA,EAAMG,YAAa,EAAKA,YAAaQ,aAAc,EAAKA,kBACjI0B,EAAiB,EAOrB,OANAjB,KAAKP,MAAME,MAAMkB,SAAQ,SAAAjC,IACC,IAAnBA,EAAKC,YACJoC,GAAkC,MAKtC,yBAAKxC,UAAU,aACX,6BACI,gDAAsBwC,IAE1B,6BACI,2BACIjC,GAAG,UACHN,KAAK,OACL6B,KAAK,UACLW,YAAY,WACZV,MAAOR,KAAKP,MAAMC,QAClBZ,SAAUkB,KAAKF,eAEnB,4BAAQR,QAASU,KAAKJ,SAAtB,aAEJ,6BACI,4BAAQN,QAASU,KAAKD,gBAAiBd,MAAOe,KAAKP,MAAME,MAAMwB,MAAK,SAAAvC,GAAS,OAAOA,EAAKC,aAAc,CAACuC,QAAS,GAAK,CAACA,QAAS,IAAhI,+BAEJ,6BACKL,Q,GAvGEM,IAAMC,WCWdC,MATf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.03a01ec1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <img \r\n                src=\"https://thumbs.dreamstime.com/b/checklist-icon-transparent-isolated-white-background-your-web-mobile-app-design-133862662.jpg\"\r\n                alt=\"\"\r\n            />\r\n            <h1>Todo List</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction TodoItem(props) {\r\n\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n\r\n    return (\r\n        \r\n            <label className=\"todo-item\">\r\n                <input type=\"checkbox\" checked={props.item.completed} onChange={() => props.handleCheck(props.item.id)}/>\r\n                <p style={props.item.completed ? completedStyle : null}>{props.item.text}</p>\r\n                <button onClick={() => props.handleDelete(props.item.id)}>Delete</button>\r\n            </label>\r\n           \r\n    )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\nclass TodoList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            newTodo: \"\",\r\n            todos: []\r\n        }\r\n        this.addTodo = this.addTodo.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleCheck = this.handleCheck.bind(this)\r\n        this.deleteCompleted = this.deleteCompleted.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handleCheck(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    todo.completed = !todo.completed\r\n                }    \r\n                return todo\r\n            })\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n    \r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    addTodo() {\r\n        if(this.state.newTodo === \"\") { return }\r\n        this.setState(prevState => {\r\n            const updatedTodoList = prevState.todos\r\n            updatedTodoList.push({id: (prevState.todos.length + 1), text: prevState.newTodo, completed: false})\r\n            return {\r\n                newTodo: \"\",\r\n                todos: updatedTodoList \r\n            }\r\n        })\r\n    }\r\n\r\n    handleDelete(id) {\r\n        this.setState(prevState => {\r\n            let todoList = []\r\n            prevState.todos.forEach(item => {\r\n                if(item.id !== id) {\r\n                    todoList.push(item)\r\n                }\r\n            })\r\n            return{\r\n                todos: todoList\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteCompleted() {\r\n        this.setState(prevState => {\r\n            let incompleteTodoList = []\r\n            prevState.todos.forEach(item => {\r\n                if(item.completed === false){\r\n                    incompleteTodoList.push(item)\r\n                }\r\n            })\r\n            return {\r\n                todos: incompleteTodoList\r\n            }\r\n        })\r\n    }\r\n \r\n    render() {\r\n\r\n        const todoItems = this.state.todos.map(item => <TodoItem key={item.id} item={item} handleCheck={this.handleCheck} handleDelete={this.handleDelete}/>)\r\n        let remainingTodos = 0\r\n        this.state.todos.forEach(item => {\r\n            if(item.completed === false) {\r\n                remainingTodos = remainingTodos + 1\r\n            }\r\n        })\r\n        \r\n        return (\r\n            <div className=\"todo-list\">\r\n                <div>\r\n                    <h3>Todos remaining: {remainingTodos}</h3>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        id=\"myInput\"\r\n                        type=\"text\"\r\n                        name=\"newTodo\"\r\n                        placeholder=\"New todo\"\r\n                        value={this.state.newTodo}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button onClick={this.addTodo}>Add todo</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.deleteCompleted} style={this.state.todos.some(item => {return item.completed}) ? {opacity: 1} : {opacity: 0}}>Delete all completed todos</button>\r\n                </div>\r\n                <div>\r\n                    {todoItems}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TodoList","import React from 'react';\nimport './style.css'\nimport Header from './Header'\nimport TodoList from './TodoList'\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}